AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'resume-challenge

  '
Globals:
  Function:
    Timeout: 3
    MemorySize: 128
  Api:
    Cors:
      AllowMethods: '''GET,POST,OPTIONS'''
      AllowHeaders: '''content-type'''
      AllowOrigin: '''*'''
Parameters:
  StageName:
    Type: String
    Default: dev
  TableName:
    Type: String
    Default: clickTable
Resources:
  ClickFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ClickFunction
      Handler: app.lambda_handler
      Runtime: python3.9
      Architectures:
      - x86_64
      Environment:
        Variables:
          TABLENAME:
            Ref: TableName
      Role:
        Fn::GetAtt:
        - ClickRole
        - Arn
      Events:
        click:
          Type: Api
          Properties:
            Path: /click
            Method: get
            RestApiId:
              Ref: ClickApi
      Policies:
      - PolicyName: apigateway-invoke-lambda
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action: lambda:InvokeFunction
            Resource:
              Fn::GetAtt:
              - ClickFunction
              - Arn
      Layers:
      - Fn::GetAtt:
        - AwsSamAutoDependencyLayerNestedStack
        - Outputs.ClickFunction6f5fe281DepLayer
    Metadata:
      SamResourceId: ClickFunction
  ClickRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service: lambda.amazonaws.com
          Action: sts:AssumeRole
      Policies:
      - PolicyName: dynamodb-access
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:Scan
            Resource:
              Fn::GetAtt:
              - MyDynamoDBTable
              - Arn
  ClickApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName:
        Ref: Stage
      DefinitionBody:
        swagger: '2.0'
        info:
          title: Click API
        paths:
          /click:
            get:
              consumes:
              - application/json
              produces:
              - application/json
              x-amazon-apigateway-integration:
                uri:
                  Fn::Sub: arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ClickFunction.Arn}/invocations
                passthroughBehavior: when_no_match
                httpMethod: POST
                type: aws_proxy
              responses:
                '200':
                  description: 200 response
      Cors: '''*'''
  ClickFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: /aws/lambda/ClickFunction
      RetentionInDays: 7
  MyDynamoDBTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
      - AttributeName: clickNumber
        AttributeType: N
      KeySchema:
      - AttributeName: clickNumber
        KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
      TableName:
        Ref: TableName
  MyPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
        - ClickFunction
        - Arn
      Principal: apigateway.amazonaws.com
  MyLambdaCloudWatchPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
        - ClickFunction
        - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Sub: arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ClickApi}/dev/*/*/*
  MyApiGatewayCloudWatchPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
        - ClickFunction
        - Arn
      Principal:
        Fn::Sub: logs.${AWS::Region}.amazonaws.com
  AwsSamAutoDependencyLayerNestedStack:
    DeletionPolicy: Delete
    Metadata:
      CreatedBy: AWS SAM CLI sync command
    Properties:
      TemplateURL: /Users/juliejin/Documents/dev/resumeChallengeBackend/my-sam-project/.aws-sam/auto-dependency-layer/adl_nested_template.yaml
    Type: AWS::CloudFormation::Stack
Outputs:
  ClickApi:
    Description: API endpoint to check clickcount
    Value:
      Fn::Sub: https://${ClickApi}.execute-api.${AWS::Region}.amazonaws.com/dev/click/
  ClickFunction:
    Description: Click Lambda Function ARN
    Value:
      Fn::GetAtt:
      - ClickFunction
      - Arn
  ClickFunctionIamRole:
    Description: Implicit IAM Role created for Click function
    Value:
      Fn::GetAtt:
      - ClickRole
      - Arn
